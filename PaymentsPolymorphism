using System;
using System.Collections.Generic;

namespace IMJunior
{
    class Program
    {
        static void Main(string[] args)
        {
            OrderForm orderForm = new OrderForm();

            List<IPaymentSystemCreator> creators = new List<IPaymentSystemCreator>
                {
                    new QIWICreator(),
                    new WebMoneyCreator(),
                    new CardCreator()
                };

            try
            {
                PaymentsSystemInfoForm paymentsSystemInfoForm = new PaymentsSystemInfoForm(creators);
                PaymentSystemSearcher paymentSystemSearcher = new PaymentSystemSearcher(creators);
                paymentsSystemInfoForm.ShowInfo();
                PaymentHandler paymentHandler = new PaymentHandler(paymentSystemSearcher.GetPaymentSystemCreator(orderForm.GetInput()));
                paymentHandler.Handle();
            }
            catch (Exception exception)
            {
                Console.WriteLine("Ошибка: " + exception.Message);
            }
        }
    }

    public interface IPaymentSystem
    {
        void ShowPaymentResult();
    }

    public interface IPaymentSystemCreator
    {
        string SystemId { get; }

        IPaymentSystem GetPaymentSystem();
    }

    public class OrderForm
    {
        public string GetInput()
        {
            Console.WriteLine("Какой системой вы хотите совершить оплату?");

            return Console.ReadLine();
        }
    }

    public class QIWICreator : IPaymentSystemCreator
    {
        public string SystemId { get; private set; } = "QIWI";

        public IPaymentSystem GetPaymentSystem()
        {
            return new QIWI();
        }
    }

    public class WebMoneyCreator : IPaymentSystemCreator
    {
        public string SystemId { get; private set; } = "WebMoney";

        public IPaymentSystem GetPaymentSystem()
        {
            return new WebMoney();
        }
    }

    public class CardCreator : IPaymentSystemCreator
    {
        public string SystemId { get; private set; } = "Банковская карта";

        public IPaymentSystem GetPaymentSystem()
        {
            return new Card();
        }
    }

    public class PaymentsSystemInfoForm
    {
        private readonly IEnumerable<IPaymentSystemCreator> _paymentSystemCreators;

        public PaymentsSystemInfoForm(IEnumerable<IPaymentSystemCreator> paymentSystemCreators)
        {
            _paymentSystemCreators = paymentSystemCreators ?? throw new InvalidOperationException("Список генераторов платёжных систем не задан");
        }

        public void ShowInfo()
        {
            Console.WriteLine("Мы принимаем:\n");

            foreach (IPaymentSystemCreator creator in _paymentSystemCreators)
                Console.WriteLine(creator.SystemId + "\n");
        }
    }

    public class PaymentSystemSearcher
    {
        private readonly IEnumerable<IPaymentSystemCreator> _creators;

        public PaymentSystemSearcher(IEnumerable<IPaymentSystemCreator> paymentSystemCreators)
        {
            _creators = paymentSystemCreators ?? throw new InvalidOperationException("Список генераторов систем пуст");
        }

        public IPaymentSystemCreator GetPaymentSystemCreator(string systemId)
        {
            foreach (IPaymentSystemCreator creator in _creators)
                if (creator.SystemId.Equals(systemId, StringComparison.OrdinalIgnoreCase))
                    return creator;

            throw new InvalidOperationException("Система с введённым идентификатором не найдена...");
        }
    }

    public class PaymentHandler
    {
        private readonly IPaymentSystemCreator _creator;

        public PaymentHandler(IPaymentSystemCreator creator)
        {
            _creator = creator ?? throw new ArgumentNullException(nameof(creator));
        }

        public void Handle()
        {
            _creator.GetPaymentSystem().ShowPaymentResult();
        }
    }

    public class QIWI : IPaymentSystem
    {
        public void ShowPaymentResult()
        {
            Console.WriteLine("Вы оплатили с помощью QIWI");
            Console.WriteLine("Проверка платежа через QIWI...");
            Console.WriteLine("Оплата прошла успешно!");
        }
    }

    public class WebMoney : IPaymentSystem
    {
        public void ShowPaymentResult()
        {
            Console.WriteLine("Вы оплатили с помощью WebMoney...");
            Console.WriteLine("Проверка платежа через WebMoney...");
            Console.WriteLine("Оплата прошла успешно!");
        }
    }

    public class Card : IPaymentSystem
    {
        public void ShowPaymentResult()
        {
            Console.WriteLine("Вы оплатили с помощью банковской карты...");
            Console.WriteLine("Проверка платежа через банковскую карту...");
            Console.WriteLine("Оплата прошла успешно!");
        }
    }
}
